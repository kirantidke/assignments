ASSIGNMENT 4
ARRAYS
1)	Write a program in the following steps
a)	Generate 10 random 3 digit number
b)	Store this random number into array
c)	Then find the 2nd largest and 2nd smallest element without sorting array
Sol:-
#! /bin/bash
for (( i=0; i<10; i++ ))
do
        random[$i]=$(( RANDOM % (1000-100) + 100 ))
done
echo ${random[@]}
largest=${random[0]}
secondLarge=${randomN[0]}

for (( i=0; i<=10; i++ ))
do
        if [[ ${random[$i]} -ge $largest ]]
        then
        secondLarge=$largest
        largest=${random[$i]}
        elif [[ ${random[$i]} -gt $secondLarge && ${random[$i]} -ne $largest ]]
        then
                secondLarge=${random[$i]}
        fi
done
echo "2nd Large in array" $secondLarge

smallest=${random[0]}
secondSmall=${random[0]}

for (( j=0; j<=10; j++ ))
do
   if [[ ${random[$j]} -le $smallest ]]
   then
       secondSmall=$smallest
       smallest=${random[$j]}
   elif [[ ${random[$j]} -lt $secondSmall && ${random[$j]} -ne $smallest ]]
   then
    secondSmall=${random[$j]}
fi
done
echo "2nd Small in array" $secondSmall

o/p:-
$ ./arraylarge1.sh
809 883 563 712 621 399 569 157 597 492
2nd Large in array 809
2nd Small in array 157



2)	Extend the above program to sort the array and then find 2nd large and 2nd smallest element
Sol:-
#! /bin/bash
for (( i=1; i<=10; i++ ))
do
   random[$i]=$(( RANDOM % (1000-100) + 100 ))
done
echo ${random[@]}
for (( j=1; j<=10; j++ ))
do
        for (( k=1; k<=10; k++ ))
        do
                if [[ ${random[$k]} -gt ${random[$j]} ]]
                then
                        temp=${random[$j]}
                        random[$j]=${random[$k]}
                        random[$k]=$temp
                fi
        done
done
echo "Sorted Array:-" ${random[@]}
echo "Second large:-" ${random[9]}
echo "second small:-" ${random[2]}

o/p:-
$ ./arraysort.sh
173 518 435 257 203 276 480 200 509 543
Sorted Array:- 173 200 203 257 276 435 480 509 518 543
Second large:- 518
second small:- 200


3)	Extend the prim factorize ation program to store all the prim factors of a number n into an array and finnallydisplay the output
Sol:-
#! /bin/bash
declare -a prim
read -p "enter a number=" number
for(( count=2; number>1; count++))
do

        while [ $((number%count)) -eq 0 ]
        do
        number=$((number/count))
        done
        prim[$count]=$count
done
echo "prim factors in array=" ${prim[@]}


o/p:-
$ ./arrayfactor.sh
enter a number=12
prim factors in array= 2 3


4)	Write a program to show sum of three integer add to ZERo
Sol:-
#! /bin/bash
declare -a array
array=(3 0 5 6 10 13 -3)
echo ${array[@]}
n=${#array[@]}
for (( i=0; i<n-2; i++ ))
do
        for (( j=0; j<n-1; j++ ))
        do
                for(( k=0; k<n; k++ ))
                do
                        if [ $(( ${array[i]}+${array[j]}+${array[k]} )) -eq 0 ]
                        then
                                echo ${array[i]} ${array[j]} ${array[k]}
                        fi
                done
        done
done

o/p:-
$ ./addzero.sh
3 0 5 6 10 13 -3
3 0 -3
0 3 -3
0 0 0


5)	Take a range from 0-100find the digit that repeted twice like 33,77 etc and store them in an arra

Sol:-
#! /bin/bash
for (( i=1; i<=100; i++ ))
do
        if [[ $(( i % 11 )) -eq 0 ]]
        then
                double[i++]=$i
        fi
done
echo ${double[@]}
o/p:-
$ ./arraydbl.sh
11 22 33 44 55 66 77 88 99

